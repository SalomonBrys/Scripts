function precmd {
    # Global text var
    PR_FILLBAR=""
    PR_PWDLEN=""
    PR_BATTERY=""
    PR_JOBS=""
    PR_GIT=""

    # Defining text length
    local termwidth
    (( termwidth = ${COLUMNS} - 1 ))
    local promptsize=${#${(%):---(%~)---(%D{$PR_DATE_FORMAT})--}}

    # If there is a battery, get it's loading value
    if which acpi > /dev/null 2>&1; then
	battery=`acpi -b | cut -d, -f2 | xargs echo`
	PR_BATTERY="$PR_BOLD$PR_COL($PR_RESET$PR_YELLOW$battery%$PR_BOLD$PR_COL)$PR_RESET$PR_SHIFT_IN$PR_COL$PR_HBAR$PR_SHIFT_OUT"
	local batterysize=${#${battery}}
	(( promptsize = $promptsize + $batterysize + 3 ))
    fi

    # If there are jobs
    if [[ ${(%):-%j} -gt 0 ]]; then
	local jobstring=""
	PR_JOBS=""
	preIFS=$IFS
	IFS='
'
	for job in `jobs`; do
	    local nIndex=4
	    local sIndex=3
	    local line=`echo $job | eval $sedCmd "s/' +'/' '/g"`
	    local indic=`echo $line | cut -d' ' -f2`
	    if [[ ${#indic} -gt 1 ]]; then
		indic='';
		nIndex=3;
		sIndex=2;
	    fi
	    local name=`echo $line | cut -d' ' -f$nIndex`
	    if [[ ${#jobstring} -gt 0 ]]; then
		jobstring=" $jobstring"
		PR_JOBS=" $PR_JOBS"
	    fi
	    local jstatus=`echo $line | cut -d' ' -f$sIndex`
	    local bold=""
	    if [[ "$jstatus" != "running" ]]; then
		bold="$PR_BOLD"
	    fi
	    jobstring="$indic$name$jobstring"
	    PR_JOBS="$PR_COL_LIGHT$indic$bold$name$PR_RESET$PR_JOBS"
	done
	IFS=$preIFS
	PR_JOBS="$PR_BOLD$PR_COL($PR_RESET$PR_JOBS$PR_BOLD$PR_COL)$PR_RESET$PR_SHIFT_IN$PR_COL$PR_HBAR$PR_SHIFT_OUT"
	local jobsize=${#jobstring}
	(( promptsize = $promptsize + $jobsize + 3 ))
    fi

    
    # Defining global text var
    if [[ "$promptsize" -gt $termwidth ]]; then
	(( PR_PWDLEN = $TERMWIDTH - $promptsize ))
    else
	PR_FILLBAR="\${(l.(($termwidth - ($promptsize)))..${PR_HBAR}.)}"
    fi

    # Git branch
    PR_GIT="$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ :\1/')"
}

setprompt () {
    # Prompt variable substitutions
    setopt prompt_subst

    # Loading colors
    autoload -U colors && colors
    for color in CYAN WHITE YELLOW MAGENTA BLACK BLUE RED GREEN; do
        eval PR_$color='%{$fg[${(L)color}]%}'
    done
    PR_BOLD="%{$terminfo[bold]%}"
    PR_RESET="%{$terminfo[sgr0]%}"

    PR_COL=%(!.$PR_RED.$PR_BLUE)
    PR_COL_LIGHT=%(!.$PR_RED.$PR_CYAN)

    # Definig special chars
    typeset -A altchar
    set -A altchar ${(s..)terminfo[acsc]}
    PR_SET_CHARSET="%{$terminfo[enacs]%}"
    PR_SHIFT_IN="%{$terminfo[smacs]%}"
    PR_SHIFT_OUT="%{$terminfo[rmacs]%}"
    if [[ "$TERM" == "xterm" ]]; then
	PR_HBAR="-"
	PR_ULCORNER="|"
	PR_LLCORNER="|"
	PR_LRCORNER="|"
	PR_URCORNER="|"
    else
	PR_HBAR=${altchar[q]:--}
	PR_ULCORNER=${altchar[l]:--}
	PR_LLCORNER=${altchar[m]:--}
	PR_LRCORNER=${altchar[j]:--}
	PR_URCORNER=${altchar[k]:--}
    fi

    # Defining date format
    PR_DATE_FORMAT="%a %d %b %H:%M"

    PROMPT='\
$PR_SET_CHARSET\
$PR_COL$PR_SHIFT_IN$PR_ULCORNER$PR_HBAR$PR_SHIFT_OUT$PR_BOLD(\
$PR_RED%$PR_PWDLEN<...<%~%<<\
$PR_COL)$PR_RESET$PR_COL$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_JOBS\
$PR_RESET$PR_COL$PR_SHIFT_IN$PR_HBAR${(e)PR_FILLBAR}$PR_HBAR$PR_SHIFT_OUT$PR_BOLD(\
$PR_RESET$PR_GREEN%D{$PR_DATE_FORMAT}\
$PR_BOLD$PR_COL)$PR_RESET$PR_COL$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_BATTERY\
$PR_SHIFT_IN$PR_URCORNER$PR_SHIFT_OUT\

$PR_SHIFT_IN$PR_LLCORNER$PR_HBAR$PR_SHIFT_OUT$PR_BOLD(\
$PR_COL_LIGHT%(!.$PR_COL_LIGHT$pr_n.$pr_n)$PR_RESET $PR_COL@ $PR_COL_LIGHT$pr_m\
$PR_BOLD$PR_YELLOW$PR_GIT\
$PR_COL) $PR_COL_LIGHT%#->$PR_RESET '

    RPROMPT='$PR_BOLD$PR_COL [$PR_RED%?$PR_COL]$PR_RESET$PR_COL$PR_SHIFT_IN$PR_HBAR$PR_LRCORNER$PR_SHIFT_OUT$PR_RESET'

    PS2='$PR_COL$PR_SHIFT_IN$PR_HBAR$PR_HBAR$PR_SHIFT_OUT\
$PR_BOLD(%_)$PR_RESET\
$PR_SHIFT_IN$PR_COL$PR_HBAR$PR_HBAR$PR_SHIFT_OUT\
$PR_RESET '
}
setprompt
